generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  name      String   @db.VarChar
  type      String   @db.VarChar
  maxLimit  BigInt?  @map("max_limit")
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_users")
  entries   Entry[]

  @@map("accounts")
}

model Category {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  name      String   @db.VarChar
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categories_users")
  entries   Entry[]

  @@map("categories")
}

model Entry {
  id           String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  accountId    String        @map("account_id") @db.Uuid
  categoryId   String        @map("category_id") @db.Uuid
  entryDate    DateTime      @map("entry_date") @db.Date /// The date the entry occurred
  description  String        @db.VarChar
  iSexpense    Boolean       @map("is_expense")
  updatedAt    DateTime      @default(now()) @map("updated_at") @db.Timestamp(6)
  createdAt    DateTime      @default(now()) @map("created_at") @db.Timestamp(6)
  accounts     Account       @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "entries_accounts")
  categories   Category      @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "entries_categories")
  installments Installment[]

  @@map("entries")
}

model Installment {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  entryId     String   @map("entry_id") @db.Uuid
  amount      BigInt
  billingDate DateTime @map("billing_date") @db.Date /// The billing date for an installment
  updatedAt   DateTime @default(now()) @map("updated_at") @db.Timestamp(6)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  entry       Entry    @relation(fields: [entryId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "installments_entries")

  @@map("installments")
}

model User {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email      String     @unique @db.VarChar
  password   String     @db.VarChar
  updatedAt  DateTime   @default(now()) @map("updated_at") @db.Timestamp(6)
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  accounts   Account[]
  categories Category[]

  @@map("users")
}
